@layout AccountLayout
@page "/account/register"
@using Morris.Blazor.FluentValidation;
@using Morris.Blazor.Validation;
@using OcphApiAuth;
@using OcphApiAuth.Client;
@using OcphApiAuth.Client.Validators;

@inject IAccountService accountService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authStateProvider


<div class="protect_section layout_padding">
    <div class="d-flex justify-content-center align-items-center">
        <EditForm Model="@registerRequest" OnValidSubmit="OnValidSubmitAction">
            <Morris.Blazor.Validation.Validate ValidationProperties=@(ValidationProperties.Set.FluentValidator<RegisterValidators>()) />
            <div class="container account">
                <div class="row">
                    <div class="col-sm-12">
                        <h2>Register</h2>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-md-6">

                        <div class="form-group">
                            <label>Email</label>
                            <input type="email" class="form-control" @bind-value="registerRequest.Email" />
                            <ValidationMessage For="@(()=>@registerRequest.Email)"></ValidationMessage>
                        </div>
                       

                    </div>
                    <div class="col-md-6">
                       
                        <div class="form-group">
                            <label>Password</label>
                            <input type="password" @bind-value="@registerRequest.Password" class="form-control" />
                            <ValidationMessage For="@(()=>registerRequest.Password)"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label>Cofirm Password</label>
                            <input type="password" @bind-value="@registerRequest.ConfirmPassword" class="form-control" />
                            <ValidationMessage For="@(()=>registerRequest.ConfirmPassword)"></ValidationMessage>
                        </div>
                    </div>
                    <div style="width:100%">
                        <button type="submit" style="width:100%" class="btn btn-primary mt-2">Register</button>
                        <label class="mt-3">Sudah Memiliki Akun ? <a href="/account/login">Login</a></label>
                    </div>
                </div>

            </div>
        </EditForm>
    </div>
</div>

<style>
    .account {
        background-color: #f7f7f787;
        padding: 30px;
        border-radius: 10px;
    }

    .layout_padding {
        position: relative !important;
        height: 100vh;
        padding: 30px;
        background-image: url(../images/banner-bg.png);
    }

    .image_2 {
        position: absolute;
        right: 20px;
        bottom: 30px;
        width: 30%;
        padding: 30px;
        opacity: .7
    }

</style>


@code {
    RegisterRequest registerRequest = new RegisterRequest() { Role = "Pasien" };

    async Task OnValidSubmitAction(EditContext context)
    {
        try
        {
            var result = await accountService.Register(registerRequest);
            if (result != null)
            {
                var userProfider = await authStateProvider.GetAuthenticationStateAsync();
                if (userProfider.User.IsInRole("Admin"))
                {
                    navigationManager.NavigateTo("/admin");
                }
                else
                {
                    navigationManager.NavigateTo("/konsultasi");
                }
            }

            // toasService.Add("Selamat Datang !", Severity.Success);
        }
        catch (Exception ex)
        {
            // toasService.Add(ex.Message,Severity.Error);
        }
    }

}
