@page "/"

@using Microsoft.AspNetCore.SignalR.Client
@using Shared

@inject ILocalStorageService LocalStorageService
@inject IContactService contactService
@inject AuthenticationStateProvider authenticationStateProvider
@inject ChatClient chatClient

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<div class="alert alert-warning" role="alert">
    Before authentication will function correctly, you must configure your provider details in <code>Program.cs</code>
</div>

Welcome to your new app.


<AuthorizeView>
    Siapa
</AuthorizeView>


<div class="form-group">
    <label>
        User:
        <input @bind="userInput" />
    </label>
</div>
<div class="form-group">
    <label>
        Message:
        <input @bind="messageInput" size="50" />
    </label>
</div>


<button @onclick="SetCurentRoom">Chat To</button>
<button @onclick="@(()=>  chatClient.Send(messageInput))">Send</button>

<hr>

<ul id="messagesList">
    @if (chatClient != null && chatClient.CurrentRoom != null)
    {
        @foreach (var message in chatClient.CurrentRoom.Messages)
        {
            <li>@($"{message.Tanggal} - {message.Text}")</li>
        }
    }
</ul>

@code {
    private HubConnection? hubConnection;
    private List<string> messages = new List<string>();
    private string? userInput;
    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        await chatClient.Start();
        chatClient.OnReciveMessage += OnReciveMessage;
    }

    void OnReciveMessage(object obj, EventArgs ev)
    {
        var message = obj as Message;
        messages.Add(message.Text);
        StateHasChanged();
    }


    async Task SetCurentRoom()
    {
        await chatClient.SetCurrentChat(userInput);
        StateHasChanged();
    }
}



